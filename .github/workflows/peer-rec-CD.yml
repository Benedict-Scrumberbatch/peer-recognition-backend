# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, CD ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
      - run: npm install
      - run: git submodule init
      - run: git submodule update
      - run: npm run build
      - run: npm run docs
#       - run: npm run test
      - name: GitHub Pages
        # You may pin to the exact commit or the version.
        # uses: crazy-max/ghaction-github-pages@b8f8d291c97fe0edd9fb4ee73018163593418e8f
        uses: crazy-max/ghaction-github-pages@v2.3.0
        with:
          # Git branch where assets will be deployed
          target_branch: gh-pages
          # Build directory to deploy
          build_dir: docs
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN_ACTIONS }}
      
      - name: Generate deployment package
        run: git archive HEAD -o deploy.zip

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Beanstalk Deploy
        # You may pin to the exact commit or the version.
        # uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          # AWS Access Key
          aws_access_key: 
          # AWS Secret Key
          aws_secret_key: 
          # AWS Session Token when using temporary security credentials such as when assuming a role in AWS through STS
          aws_session_token: # optional
          # AWS Region
          region: <aws_region>
          # Beanstalk application name
          application_name: <app-name>
          # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
          environment_name: <beanstalk-env-name>
          # Version label for new Beanstalk version
          version_label: "my-app-${{ steps.format-time.outputs.replaced }}"
          # Zip file with the version to deploy. If skipped the action will deploy existing version.
          deployment_package: deploy.zip
        
        - name: Deployed successfully!
          run: echo App deployed to ELB
